<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="itwillbs.p2c3.boogimovie.mapper.MypageMapper">
  
  	<!-- 메인페이지 id -->
    <select id="selectMember" resultType="itwillbs.p2c3.boogimovie.vo.MemberVO">
        SELECT * FROM member WHERE member_id = #{id}
    </select>
    
	<!-- My극장 극장 전체리스트 -->
    <select id="selectTheater" resultType="itwillbs.p2c3.boogimovie.vo.TheaterVO">
    	SELECT theater_num, theater_name
    	FROM theater
    </select>
    
    
    <!-- My극장 자주가는 영화관 -->
    <select id="selectMyTheater" resultType="itwillbs.p2c3.boogimovie.vo.MemberVO">
    	SELECT member_my_theater1, member_my_theater2, member_my_theater3
    	FROM member
		WHERE member_id = #{member_id};
    </select>
    
    <!-- 예매내역 -->
<!-- 	<select id="selectMovieReservation" resultType="map"> -->
<!--  		SELECT DISTINCT -->
<!-- 		   movie.movie_name, -->
<!-- 		   movie.movie_poster, -->
<!-- 		   CONCAT(screen_session.scs_start_time, ' ~ ', screen_session.scs_end_time) AS session_time, -->
<!-- 		   CONCAT(theater.theater_name, ' ', screen_info.screen_cinema_num, '관') AS theater_info, -->
<!-- 		   ticket.ticket_seat_info, -->
<!-- 		   ticket.ticket_price, -->
<!-- 		   screen_session.scs_date -->
<!-- 		FROM -->
<!-- 			screen_session -->
<!-- 		JOIN pay ON screen_session.scs_num = pay.scs_num  -->
<!-- 		JOIN member ON member.member_id = pay.member_id  -->
<!-- 		JOIN theater ON theater.theater_num = screen_session.theater_num -->
<!-- 		JOIN movie ON movie.movie_num = screen_session.movie_num -->
<!-- 		JOIN ticket ON ticket.ticket_pay_num = pay.ticket_pay_num  -->
<!-- 		JOIN screen_info ON screen_info.screen_cinema_num = screen_session.screen_cinema_num -->
<!-- 		WHERE member.member_id = #{member_id} AND pay.ticket_pay_status = '1' -->
<!-- 		ORDER BY screen_session.scs_date DESC -->
<!-- 	</select> -->
    
<!--     <select id="selectResvList" resultType="map"> -->
<!--  		SELECT  DISTINCT  -->
<!-- 		   movie.movie_name, -->
<!-- 		   movie.movie_poster, -->
<!-- 		   CONCAT(screen_session.scs_start_time, ' ~ ', screen_session.scs_end_time) AS session_time, -->
<!-- 		   CONCAT(theater.theater_name, ' ', screen_info.screen_cinema_num, '관') AS theater_info, -->
<!-- 		   ticket.ticket_seat_info, -->
<!-- 		   ticket.ticket_price, -->
<!-- 		   screen_session.scs_date -->
<!-- 		FROM -->
<!-- 			screen_session -->
<!-- 		JOIN pay ON screen_session.scs_num = pay.scs_num  -->
<!-- 		JOIN member ON member.member_id = pay.member_id  -->
<!-- 		JOIN theater ON theater.theater_num = screen_session.theater_num -->
<!-- 		JOIN movie ON movie.movie_num = screen_session.movie_num -->
<!-- 		JOIN ticket ON ticket.ticket_pay_num = pay.ticket_pay_num  -->
<!-- 		JOIN screen_info ON screen_info.screen_cinema_num = screen_session.screen_cinema_num -->
<!-- 		WHERE member.member_id = #{member_id} AND pay.ticket_pay_status = '1' -->
<!--     	ORDER BY screen_session.scs_date DESC -->
<!--     	LIMIT #{startRow}, #{listLimit} -->
<!--     </select> -->
    
    <!-- 예매한 영화 갯수 -->
<!--     <select id="selectResvCount" resultType="int"> -->
<!-- 	   SELECT COUNT(DISTINCT screen_session.scs_num) -->
<!-- 		FROM -->
<!-- 			screen_session -->
<!-- 		JOIN pay ON screen_session.scs_num = pay.scs_num  -->
<!-- 		JOIN member ON member.member_id = pay.member_id  -->
<!-- 		JOIN theater ON theater.theater_num = screen_session.theater_num -->
<!-- 		JOIN movie ON movie.movie_num = screen_session.movie_num -->
<!-- 		JOIN ticket ON ticket.ticket_pay_num = pay.ticket_pay_num  -->
<!-- 		JOIN screen_info ON screen_info.screen_cinema_num = screen_session.screen_cinema_num -->
<!-- 		WHERE member.member_id = #{member_id} AND pay.ticket_pay_status = '1' -->
<!--     </select> -->
    <!-- 취소내역 -->
<!--     <select id="selectCancelList" resultType="map"> -->
<!-- 	 	SELECT DISTINCT  -->
<!-- 		   movie.movie_name, -->
<!-- 		   movie.movie_poster, -->
<!-- 		   CONCAT(screen_session.scs_start_time, ' ~ ', screen_session.scs_end_time) AS session_time, -->
<!-- 		   CONCAT(theater.theater_name, ' ', screen_info.screen_cinema_num, '관') AS theater_info, -->
<!-- 		   ticket.ticket_seat_info, -->
<!-- 		   ticket.ticket_price, -->
<!-- 		   screen_session.scs_date -->
<!-- 		FROM -->
<!-- 			screen_session -->
<!-- 		JOIN pay ON screen_session.scs_num = pay.scs_num  -->
<!-- 		JOIN member ON member.member_id = pay.member_id -->
<!-- 		JOIN theater ON theater.theater_num = screen_session.theater_num -->
<!-- 		JOIN movie ON movie.movie_num = screen_session.movie_num -->
<!-- 		JOIN ticket ON ticket.ticket_pay_num = pay.ticket_pay_num -->
<!-- 		JOIN screen_info ON screen_info.screen_cinema_num = screen_session.screen_cinema_num -->
<!-- 		WHERE member.member_id = #{member_id} AND pay.ticket_pay_status = '2' -->
<!-- 		ORDER BY screen_session.scs_date DESC -->
<!--     </select> -->
    
    <!-- 회원정보 -->
    <select id="selectDbMember" resultType="itwillbs.p2c3.boogimovie.vo.MemberVO">
    	SELECT * FROM member WHERE member_id = #{member_id}
    </select>
    
    <!-- 정보수정 -->
    <!-- 이름, 아이디, 비번, 생년월일, 주소, 이메일, 폰번, 취향 -->
    <update id="updateMember">
 		UPDATE member
		SET
			<!-- 새 패스워드(passwd) 입력 여부에 따라 패스워드 변경 여부 결정 -->
			<!-- 마이바티스 동적 SQL 기능 중 <if></if> 활용하여 패스워드 변경 작업을 동적으로 처리 -->
			<!-- 주의! 비교에 사용될 파라미터는 #{} 또는 ${} 제외하고 표현 -->
			<!-- passwd 파라미터가 null 이 아니고 널스트링('')도 아닐 경우 패스워드 변경 -->
			<!-- (실제로는 패스워드 미입력 시 널스트링이 전달되므로 null 값 판별 생략 가능) -->
			<if test="member_pwd != null and !member_pwd.equals('')">
				member_pwd = #{member_pwd},
			</if>
			member_birth = #{member_birth}
			, member_addr = #{member_addr}
			, member_email = #{member_email}
			, member_tel = #{member_tel}
		WHERE
			member_id = #{member_id}
    
    </update>
    
    <!-- 쿠폰 -->
    <select id="selectCoupon" resultType="itwillbs.p2c3.boogimovie.vo.CouponVO">
		SELECT coupon.coupon_num
		FROM coupon JOIN pay 
		ON coupon.coupon_num = pay.coupon_num 
		JOIN member
		ON member.member_id = pay.member_id
		WHERE member.member_id = #{member_id}
    </select>
    
    <insert id="insertMyTheater">
	    INSERT INTO member (member_my_theater1, member_my_theater2, member_my_theater3)
		<foreach collection="checkedValues" item="item" separator=",">
        	VALUES (#{item})
		</foreach>
    </insert>
    
    
    
    
    
    <!-- 탈퇴처리 -->
   	<!-- member 테이블의 member_status 컬럼값을 3(탈퇴)로 변경 탈퇴일자(withdraw_date) 를 now() 함수 -->
    <update id="updateMemberForWithdraw">
   		UPDATE member
		SET member_status = 3,
			member_withdraw_date = now()
		WHERE
			member_id = #{member_id}
    </update>
    
</mapper>